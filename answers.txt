
- Read/Query
1. Do a query to see all the bounties
- db.bounties.find().pretty()

2. Do a query to find the bounty whose client is Time Bureau
- db.bounties.find({client: "Time Bureau"}).pretty()

3. Do a query to find the bounties who have been captured
- db.bounties.find({captured: true}).pretty()

4. Do a query specific to the bounty you inserted
- db.bounties.find({name: "Han Solo"})
5. Do a query to just return the names of all the bounties
-  db.bounties.find({}, {name: 1})

- Remove
6. Starbuck and the Captain have come to an understanding. Remove her record
-  db.bounties.remove({name: "Starbuck"})

7. find and remove the duplicate record - be sure to JUST remove the one copy
- db.bounties.remove({name: "Han Solo"},{justOne: 1}) 

- Update
8. Update Sara Lance's name to be her superhero alias 'White Canary'
-db.bounties.update({name: "Sara Lance"}, {$set: {name: "White Canary"}})

9. Update Rocket's ship to be The Milano 2
-db.bounties.update({name: "Rocket"}, {$set: {ship: "The Milano 2"}})

- Intermediate Mongo
Check out the Intermediate Mongo lecture notes in the instructor notes directory. Follow through each of the explanations. Follow the commands and perform appropriate finds after each update call to see the results

10. Find the bounties that are greater than 100000
- db.bounties.find({reward: {$gt: 100000}}).pretty()

11. Find the bounties that are less than 1000 *****
-  db.bounties.find({reward: {$lt: 1000}}).pretty()

12. Find the bounties that are less than or equal to 1000
-  db.bounties.find({reward: {$lte: 1000}}).pretty()

13. Find the bounty with the hunter Nebula
- db.bounties.find({hunters: "Nebula"}).pretty()

14. Find the bounty with the ship Waverider OR Serenity
- db.bounties.find({$or: [{ship: "Waverider"}, {ship: "Serenity"}]}).pretty()

15. Find the bounty who is not captured AND has whose client is Ayesha High Priestess of the Sovereign
- db.bounties.find({$and: [{captured: false}, {client: "Ayesha High Priestess of the Sovereign"}]}).pretty()

16. Increase all the bounties by 333333
- db.bounties.update({}, {$inc: {reward: +333333}}, {multi: true})

17. Multiply all the bounties by 2
- db.bounties.update({}, {$mul: {reward: 2}}, {multi: true})

18. Add Bobba Fett as a hunter for Malcolm Reynolds
-db.bounties.update({name: "Malcolm Reynolds"}, {$push: {hunters: "Bobba Fett"}})

19. Add Bobba Fett as a hunter for the one that has the ship Waverider
- db.bounties.update({ship: "Waverider"}, {$push: {hunters: "Bobba Fett"}})

20. Find and remove Dengar the bounty hunter
- db.bounties.find({hunters: "Dengar"}).pretty()
- 

Upsert is used with update method which creates a new document if the query does not retrieve any documents matching the query parameters.

Try giving a lastSeen field to Han Solo, with the property yesterday (we haven't set his yet)

Try giving all bounties that are not Han Solo a new field of lastSeen - with a value of last week
